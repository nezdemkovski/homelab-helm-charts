apiVersion: v1
kind: ConfigMap
metadata:
  name: cmp-plugin
  namespace: argocd
data:
  plugin.yaml: |
    apiVersion: argoproj.io/v1alpha1
    kind: ConfigManagementPlugin
    metadata:
      name: helm-sops
    spec:
      version: v1.0
      init:
        command: [sh, -c]
        args: ["echo 'Initializing Helm + SOPS plugin'"]
      generate:
        command: [sh, -c]
        args:
          - |
            set -e
            echo "ðŸ”“ Decrypting SOPS files..."
            
            # Set SOPS age key
            export SOPS_AGE_KEY_FILE=/sops/key.txt
            
            # Find and decrypt SOPS encrypted files
            for file in $(find . -name "*.yaml" -path "*/environments/*"); do
              if sops -d "$file" > /dev/null 2>&1; then
                echo "Decrypting $file"
                sops -d "$file" > "${file}.decrypted"
                mv "${file}.decrypted" "$file"
              fi
            done
            
            echo "ðŸŽ¯ Generating Helm template..."
            helm template $ARGOCD_APP_NAME . $ARGOCD_ENV_HELM_ARGS
      discover:
        find:
          glob: "**/Chart.yaml"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-repo-server
  namespace: argocd
spec:
  template:
    spec:
      initContainers:
      - name: download-tools
        image: alpine:3.18
        command: [sh, -c]
        args:
          - |
            echo "ðŸ“¦ Installing tools..."
            # Install SOPS
            wget -O /custom-tools/sops https://github.com/mozilla/sops/releases/download/v3.8.1/sops-v3.8.1.linux.amd64
            chmod +x /custom-tools/sops
            
            # Install Helm
            wget -O helm.tar.gz https://get.helm.sh/helm-v3.12.3-linux-amd64.tar.gz
            tar -xzf helm.tar.gz
            mv linux-amd64/helm /custom-tools/helm
            chmod +x /custom-tools/helm
            
            echo "âœ… Tools installed successfully"
        volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
      containers:
      - name: repo-server
        env:
        - name: PATH
          value: /custom-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        - name: SOPS_AGE_KEY_FILE
          value: /sops/key.txt
        volumeMounts:
        - mountPath: /custom-tools
          name: custom-tools
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: cmp-tmp
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: plugin.yaml
          name: cmp-plugin
        - mountPath: /sops
          name: sops-age-key
          readOnly: true
      - name: cmp-server
        image: quay.io/argoproj/argocd:v3.1.0
        command: [/var/run/argocd/argocd-cmp-server]
        env:
        - name: PATH
          value: /custom-tools:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin
        - name: SOPS_AGE_KEY_FILE
          value: /sops/key.txt
        securityContext:
          runAsNonRoot: true
          runAsUser: 999
        volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /tmp
          name: cmp-tmp
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: plugin.yaml
          name: cmp-plugin
        - mountPath: /custom-tools
          name: custom-tools
        - mountPath: /sops
          name: sops-age-key
          readOnly: true
      volumes:
      - name: custom-tools
        emptyDir: {}
      - name: plugins
        emptyDir: {}
      - name: cmp-tmp
        emptyDir: {}
      - name: var-files
        emptyDir: {}
      - name: cmp-plugin
        configMap:
          name: cmp-plugin
      - name: sops-age-key
        secret:
          secretName: sops-age-key
          defaultMode: 0400
